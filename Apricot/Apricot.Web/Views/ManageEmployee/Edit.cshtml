@model Apricot.Web.Models.FullEmployee

@{
    ViewBag.Title = "Edit";
    List<SelectListItem> departments = new List<SelectListItem>(0);

    if (!IsPost)
    {
        foreach (var department in ViewBag.DepartmentList)
        {
            if ((Model.Department.Dept_ID + " - " + Model.Department.Dept_Name) == department)
            {
                departments.Add(new SelectListItem() { Text = department, Value = department, Selected = true });
            }
            else
            {
                departments.Add(new SelectListItem() { Text = department, Value = department });
            }
        }
    }
    List<SelectListItem> Genders = new List<SelectListItem>(0);
    Genders.Add(new SelectListItem() { Text = "Male", Value = "M" });
    Genders.Add(new SelectListItem() { Text = "FeMale", Value = "F" });
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "ManageEmployee", new { id = Model.Emp_ID }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FullEmployee</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Emp_ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Emp_No, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_No)
                @Html.ValidationMessageFor(model => model.Emp_No)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emp_Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_Name)
                @Html.ValidationMessageFor(model => model.Emp_Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Is_Active, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Is_Active)
                @Html.ValidationMessageFor(model => model.Is_Active)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emp_Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_Address)
                @Html.ValidationMessageFor(model => model.Emp_Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emp_Contact_No, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_Contact_No)
                @Html.ValidationMessageFor(model => model.Emp_Contact_No)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emp_Gender, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Emp_Gender, Genders)
                @Html.ValidationMessageFor(model => model.Emp_Gender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Department.Dept_Name, departments)
                @Html.ValidationMessageFor(model => model.Department)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
